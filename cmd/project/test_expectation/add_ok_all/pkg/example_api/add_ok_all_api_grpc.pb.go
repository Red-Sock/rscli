// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.25.1
// source: grpc/add_ok_all_api.proto

package example_api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	AddOkAllAPI_Version_FullMethodName = "/add_ok_all_api.addOkAllAPI/Version"
)

// AddOkAllAPIClient is the client API for AddOkAllAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AddOkAllAPIClient interface {
	Version(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
}

type addOkAllAPIClient struct {
	cc grpc.ClientConnInterface
}

func NewAddOkAllAPIClient(cc grpc.ClientConnInterface) AddOkAllAPIClient {
	return &addOkAllAPIClient{cc}
}

func (c *addOkAllAPIClient) Version(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := c.cc.Invoke(ctx, AddOkAllAPI_Version_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AddOkAllAPIServer is the server API for AddOkAllAPI service.
// All implementations must embed UnimplementedAddOkAllAPIServer
// for forward compatibility
type AddOkAllAPIServer interface {
	Version(context.Context, *PingRequest) (*PingResponse, error)
	mustEmbedUnimplementedAddOkAllAPIServer()
}

// UnimplementedAddOkAllAPIServer must be embedded to have forward compatible implementations.
type UnimplementedAddOkAllAPIServer struct {
}

func (UnimplementedAddOkAllAPIServer) Version(context.Context, *PingRequest) (*PingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Version not implemented")
}
func (UnimplementedAddOkAllAPIServer) mustEmbedUnimplementedAddOkAllAPIServer() {}

// UnsafeAddOkAllAPIServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AddOkAllAPIServer will
// result in compilation errors.
type UnsafeAddOkAllAPIServer interface {
	mustEmbedUnimplementedAddOkAllAPIServer()
}

func RegisterAddOkAllAPIServer(s grpc.ServiceRegistrar, srv AddOkAllAPIServer) {
	s.RegisterService(&AddOkAllAPI_ServiceDesc, srv)
}

func _AddOkAllAPI_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddOkAllAPIServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AddOkAllAPI_Version_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddOkAllAPIServer).Version(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// AddOkAllAPI_ServiceDesc is the grpc.ServiceDesc for AddOkAllAPI service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AddOkAllAPI_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "add_ok_all_api.addOkAllAPI",
	HandlerType: (*AddOkAllAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Version",
			Handler:    _AddOkAllAPI_Version_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc/add_ok_all_api.proto",
}
