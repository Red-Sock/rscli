package config_generators

import (
	"testing"

	"github.com/stretchr/testify/require"
	"go.vervstack.ru/matreshka"

	"github.com/Red-Sock/rscli/tests"
)

func TestGenServer(t *testing.T) {
	type testCase struct {
		servers      matreshka.Servers
		expectedFile []byte
	}

	testCases := map[string]testCase{
		"default": {
			servers: matreshka.Servers{
				8080: {
					Port: "8080",
					GRPC: nil,
					FS:   nil,
					HTTP: nil,
				},
			},
			expectedFile: []byte(`
// Code generated by RedSock CLI. DO NOT EDIT.

package config

import ( 
     "go.vervstack.ru/matreshka/server"
)

type ServersConfig struct { 
    Master *server.Server
}
`)[1:],
		},
	}
	for name, tc := range testCases {
		t.Run(name, func(t *testing.T) {
			tc := tc
			ic, folder, err := newGenerateServerConfigStruct(tc.servers)()
			require.NoError(t, err)
			_ = ic

			tests.CompareLongStrings(t, tc.expectedFile, folder.Content)
		})
	}

}
