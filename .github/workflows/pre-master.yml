name: pre-master-actions
run-name: pre-master-checks
on:
  pull_request:
    branches:
      - main

env:
  PATTERN_MK_FILE_PTH: plugins/project/processor/patterns/pattern/rscli.mk
  
jobs:
  project-plugin-tag-validation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Obtaining current release tag
        id: release
        run: |
          # obtaining latest stable release
          latestRelease=$(gh release list \
            -R https://github.com/Red-Sock/rscli \
            --exclude-drafts \
            --exclude-pre-releases \
            -L 1)
          
          # predefined variable for splitting strings
          IFS='	'
          
          read -a latestReleaseArr <<< "$latestRelease"
          
          echo "tag=${latestReleaseArr[0]}" >> $GITHUB_OUTPUT
          echo "latest github release is ${latestReleaseArr[0]}"
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Obtaining tag from pattern
        id: project
        run: |
          tagFromPattern=`head -n 1 $PATTERN_MK_FILE_PTH`
          
          IFS='='
          read -a patternTagArr <<< "$tagFromPattern"
          
          echo "Current pattern tag is ${patternTagArr[1]}"
          echo "tag=${patternTagArr[1]}" >> $GITHUB_OUTPUT


      - name: Validating tag
        run: |
          echo "Latest release: ${{ steps.release.outputs.tag }}"
          echo "Project tag: ${{ steps.project.outputs.tag }}"
          
          export msg=Release tags are equal. Update rscli version in $PATTERN_MK_FILE_PTH before creating release and recompile project-pattern
          echo $msg
          if [[ "${{ steps.release.outputs.tag }}" == "${{ steps.project.outputs.tag }}" ]]; then
              
              echo "${{msg}}"
              gh pr comment ${{ github.event.number }} -b "$(msg)" 
              exit 1
          fi

  project-plugin-compiled:
    needs: project-plugin-tag-validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Go env
        uses: actions/setup-go@v4
        with:
          go-version: 1.19
      - name: Compiling pattern
        run: |
          make compile-pattern
          diffs=`git diff`
          if ((${#diffs} != 0)); then 
            
            gh pr comment ${{ github.event.number }} -b "Recompile project-pattern before merge to master" 
            echo "Recompile project and push"
            exit 1
          fi
